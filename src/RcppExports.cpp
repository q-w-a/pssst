// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_expand_surv
DataFrame rcpp_expand_surv(DataFrame surv_df, NumericVector p, NumericVector l_p, CharacterVector y_p);
RcppExport SEXP _pssst_rcpp_expand_surv(SEXP surv_dfSEXP, SEXP pSEXP, SEXP l_pSEXP, SEXP y_pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type surv_df(surv_dfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l_p(l_pSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y_p(y_pSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_expand_surv(surv_df, p, l_p, y_p));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_expand_surv_helper
DataFrame rcpp_expand_surv_helper(DataFrame surv_df, double nindiv, double np);
RcppExport SEXP _pssst_rcpp_expand_surv_helper(SEXP surv_dfSEXP, SEXP nindivSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type surv_df(surv_dfSEXP);
    Rcpp::traits::input_parameter< double >::type nindiv(nindivSEXP);
    Rcpp::traits::input_parameter< double >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_expand_surv_helper(surv_df, nindiv, np));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_gradient_multi
NumericVector rcpp_gradient_multi(DataFrame x_df, NumericVector log_shapes, NumericVector log_scales, int dist);
RcppExport SEXP _pssst_rcpp_gradient_multi(SEXP x_dfSEXP, SEXP log_shapesSEXP, SEXP log_scalesSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x_df(x_dfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type log_shapes(log_shapesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type log_scales(log_scalesSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_gradient_multi(x_df, log_shapes, log_scales, dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_loglik_multi
NumericVector rcpp_loglik_multi(DataFrame x_df, NumericVector log_shapes, NumericVector log_scales, int dist);
RcppExport SEXP _pssst_rcpp_loglik_multi(SEXP x_dfSEXP, SEXP log_shapesSEXP, SEXP log_scalesSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x_df(x_dfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type log_shapes(log_shapesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type log_scales(log_scalesSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_loglik_multi(x_df, log_shapes, log_scales, dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_turnbull
List rcpp_turnbull(int niter, NumericVector t0, NumericVector t1, NumericVector lefttrunc, NumericVector righttrunc, NumericVector weights);
RcppExport SEXP _pssst_rcpp_turnbull(SEXP niterSEXP, SEXP t0SEXP, SEXP t1SEXP, SEXP lefttruncSEXP, SEXP righttruncSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lefttrunc(lefttruncSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type righttrunc(righttruncSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_turnbull(niter, t0, t1, lefttrunc, righttrunc, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pssst_rcpp_expand_surv", (DL_FUNC) &_pssst_rcpp_expand_surv, 4},
    {"_pssst_rcpp_expand_surv_helper", (DL_FUNC) &_pssst_rcpp_expand_surv_helper, 3},
    {"_pssst_rcpp_gradient_multi", (DL_FUNC) &_pssst_rcpp_gradient_multi, 4},
    {"_pssst_rcpp_loglik_multi", (DL_FUNC) &_pssst_rcpp_loglik_multi, 4},
    {"_pssst_rcpp_turnbull", (DL_FUNC) &_pssst_rcpp_turnbull, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_pssst(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
